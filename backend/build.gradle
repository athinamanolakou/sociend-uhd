plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.example.cis4900.spring'
version = '1.0'
archivesBaseName="uhd-app"


repositories {
    mavenCentral()
    jcenter()
}

jacoco {
        toolVersion = "0.8.11"
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'mysql:mysql-connector-java:8.0.11'
    runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.11.2' // Adding Mockito dependency for testing
    
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // Adding JUnit 5 dependency for testing
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // Adding JUnit 5 engine for testing
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run

}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        csv.required = true

     }

}


checkstyle{
    toolVersion = '10.12.1' // Specify the Checkstyle version
    configFile = file('config/checkstyle/checkstyle.xml') // Ensure this file exists in your project
}

tasks.withType(org.gradle.api.plugins.quality.Checkstyle) { // Ensure the correct class type
    reports {
        xml.required.set(false) // Disable XML reports
        html.required.set(true) // Enable HTML reports
    }
}

// Make sure Checkstyle runs with the check task
tasks.named('check') {
    dependsOn 'checkstyleMain'
    dependsOn 'checkstyleTest'
}