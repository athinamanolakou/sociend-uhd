stages:
  - build
  - lint
  - test  
  - sonar_analysis

# BUILD STAGE
build-backend:
  stage: build
  image: gradle:7.5-jdk17
  script:
    - cd backend
    - gradle clean build -x test -x check
  rules:
    - when: always
  allow_failure: false

# LINT STAGE
lint-backend:
  stage: lint
  image: gradle:7.5-jdk17
  script:
    - cd backend
    - gradle check
  rules:
    - when: always
  allow_failure: false

lint-frontend:
  stage: lint
  image: node:16
  script:
    - cd frontend
    - npm install
    - npx eslint . --ext .js,.jsx
  rules:
    - when: always
  allow_failure: false

# TEST STAGE
test-python:
  stage: test
  image: python:3.12  
  before_script:
    - cd ingestor  
    - pip install --upgrade pip
    - pip install pytest coverage  
    - pip install -r requirements.txt 
  script:
    - coverage run -m pytest tests/test.py  
    - coverage report -m  
  rules:
    - when: always
  allow_failure: false

test-frontend:
  stage: test
  image: node:16
  before_script:
    - cd frontend
    - npm install
  script:
    - npm test -- --watchAll=false
    - npm test -- --coverage --watchAll=false  # Run tests with coverage
  rules:
    - when: always
  allow_failure: true

test-backend:
  stage: test
  image: gradle:7.5-jdk17
  script:
    - apt-get update && apt-get install -y bsdmainutils
    - cd backend
    - chmod +x gradlew
    - ./gradlew test jacocoTestReport
    - echo "=== CSV Coverage Report ==="
    - column -t -s, build/reports/jacoco/test/jacocoTestReport.csv 
  rules:
    - when: always
  allow_failure: false

# ========================
# âœ… SONARQUBE VARIABLES
# ========================
variables:
  SONAR_HOST_URL: "https://sonarqube.socs.uoguelph.ca"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
  GIT_DEPTH: "0"  # Fetches all branches (needed for Sonar)
  SONAR_BACKEND_TOKEN: "sqp_81157c9b3c8e28531d29df20ff22927f501ee3ec"
  SONAR_FRONTEND_TOKEN: "sqp_250ab61ed75bff236b6b22f45de811d87757f646"
  SONAR_INGESTOR_TOKEN: "sqp_771479738e48b4f395e6fa9a81b6f5fffdd12764" 

# ========================
# ðŸš€ SONAR ANALYSIS STAGE (NEW)
# ========================
sonar_analysis_backend:
  image: gradle:8.2.0-jdk17-jammy
  stage: sonar_analysis
  script:
    - cd backend
    - gradle build -x checkstyleMain -x checkstyleTest sonar -Dsonar.login=$SONAR_BACKEND_TOKEN  
  allow_failure: true
  only:
    - main  

sonar_analysis_frontend:
  image: sonarsource/sonar-scanner-cli:latest
  stage: sonar_analysis
  script:
    - cd frontend
    - npm install  
    - npm run build  
    - sonar-scanner 
        -Dsonar.projectKey=sociend_frontend
        -Dsonar.sources=. 
        -Dsonar.host.url=$SONAR_HOST_URL 
        -Dsonar.login=$SONAR_FRONTEND_TOKEN
        -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - main

sonar_analysis_ingestor:
  image: python:3.12
  stage: sonar_analysis
  script:
    - cd ingestor
    - sonar-scanner 
        -Dsonar.projectKey=sociend_ingester
        -Dsonar.sources=. 
        -Dsonar.host.url=$SONAR_HOST_URL 
        -Dsonar.login=$SONAR_INGESTOR_TOKEN
        -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - main
